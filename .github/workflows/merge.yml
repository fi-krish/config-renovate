name: Merge renovate PRs
on:
  push:
    paths:
      - '.github/workflows/merge.yml'
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

concurrency:
  group: merge
  cancel-in-progress: true

jobs:
  find-prs:
    runs-on: ubuntu-latest

    outputs:
      prs: ${{ steps.find-prs.outputs.result }}

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Find PRs
        id: find-prs
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          script: |
            const { data } = await github.rest.search.issuesAndPullRequests({
              q: `owner:${context.repo.owner} is:pr is:open label:"dependencies"`,
              sort: 'created'
            })

            core.info(`Found ${data.total_count} PRs`)

            const prs = data.items.map(item => {
              return {
                repo: item.repository_url.replace('https://api.github.com/repos/', ''),
                number: item.number
              }
            })

            return prs

  approve-prs:
    runs-on: ubuntu-latest
    needs: find-prs

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Approve PRs
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          github-token: ${{ secrets.GH_OWNER_TOKEN }}
          script: |
            const prs = ${{ needs.find-prs.outputs.prs }}

            for (const pr of prs) {
              core.startGroup(`${pr.repo}#${pr.number}`)

              await github.rest.pulls.createReview({
                owner: pr.repo.split('/')[0],
                repo: pr.repo.split('/')[1],
                pull_number: pr.number,
                event: 'APPROVE'
              })

              core.info(`Approved PR #${pr.number}`)

              core.endGroup()
            }

  merge-prs:
    runs-on: ubuntu-latest
    needs:
      - find-prs
      - approve-prs

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Merge PRs
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          github-token: ${{ secrets.GH_OWNER_TOKEN }}
          script: |
            const prs = ${{ needs.find-prs.outputs.prs }}

            for (const pr of prs) {
              core.startGroup(`${pr.repo}#${pr.number}`)

              await github.rest.pulls.merge({
                owner: pr.repo.split('/')[0],
                repo: pr.repo.split('/')[1],
                pull_number: pr.number,
                merge_method: 'squash'
              })

              core.info(`Merged PR #${pr.number}`)

              core.endGroup()
            }

  comment:
    runs-on: ubuntu-latest
    needs:
      - find-prs
      - merge-prs

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Comment PRs
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          github-token: ${{ secrets.GH_BOT_TOKEN }}
          script: |
            const prs = ${{ needs.find-prs.outputs.prs }}

            for (const pr of prs) {
              core.startGroup(`${pr.repo}#${pr.number}`)

              core.info(`Commenting on PR #${pr.number}`)

              await github.rest.issues.createComment({
                owner: pr.repo.split('/')[0],
                repo: pr.repo.split('/')[1],
                issue_number: pr.number,
                body: `**Automatically merged by [GitHub Actions](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})**`
              })

              core.endGroup()
            }

